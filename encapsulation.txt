Encapsulation:

Another term of data hiding in java is called Encapsulation.  For example, a capsule which is mixed of several medicines.

By providing only a setter or getter method, you can make the class read-only or write-only. In other words, you can skip the getter or setter methods.

-> declare class variables/attributes as private
-> provide public get and set methods to access and update the value of a private variable

It provides you the control over the data. Suppose you want to set the value of id which should be greater than 100 only, you can write the logic inside the setter method. You can write the logic not to store the negative numbers in the setter methods.

Get and Set:

private variables can only be accessed within the same class (an outside class has no access to it). it is possible to access them if we provide public get and set methods.

The get method returns the variable value, and the set method sets the value.

Syntax for both is that they start with either get or set, followed by the name of the variable, with the first letter in upper case:


It is a way to achieve data hiding in Java because other class will not be able to access the data through the private data members.


public class Person {
  private String name; // private = restricted access

  // Getter
  public String getName() {
    return name;
  }

  // Setter
  public void setName(String newName) {
    this.name = newName;
  }
}

public class Main {
  public static void main(String[] args) {
    Person myObj = new Person();
    myObj.name = "John";  // error
    System.out.println(myObj.name); // error 
  }
}


The get method returns the value of the variable name.

The set method takes a parameter (newName) and assigns it to the name variable. The this keyword is used to refer to the current object.

However, as the name variable is declared as private, we cannot access it from outside this class:


